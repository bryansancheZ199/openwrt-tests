name: Daily test for snapshots
on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

env:
  PYTHONUNBUFFERED: "1"
  PYTEST_ADDOPTS: "--color=yes"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  test-real:
    name: Test OpenWrt on ${{ matrix.device }}
    runs-on: global-coordinator
    strategy:
      fail-fast: false
      matrix:
        include:
          - device: openwrt-one
            target: mediatek-filogic
            firmware: openwrt-mediatek-filogic-openwrt_one-initramfs.itb
            proxy: labgrid-aparcar

          - device: turris-omnia
            target: mvebu-cortexa9
            firmware: openwrt-mvebu-cortexa9-cznic_turris-omnia-initramfs-kernel.bin
            proxy: labgrid-bastian

          - device: tplink_tl-wdr3600-v1
            target: ath79-generic
            firmware: openwrt-ath79-generic-tplink_tl-wdr3600-v1-initramfs-kernel.bin
            proxy: labgrid-aparcar

          - device: genexis-pulse-ex400
            target: ramips-mt7621
            firmware: openwrt-ramips-mt7621-genexis_pulse-ex400-initramfs-kernel.bin
            proxy: labgrid-aparcar

          - device: hp-msm460
            target: mpc85xx-p1020
            firmware: openwrt-mpc85xx-p1020-hpe_msm460-initramfs-kernel.bin
            proxy: labgrid-blocktrron

          - device: tplink_tl-wr842n-v3
            target: ath79-generic
            firmware: openwrt-ath79-generic-tplink_tl-wr842n-v3-initramfs-kernel.bin
            proxy: labgrid-blocktrron

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Download test firmware
        env:
          target: ${{ matrix.target }}
        run: |
          mkdir -p /tmp/tftp/${{ matrix.device }}
          wget https://downloads.openwrt.org/snapshots/targets/${target/-/\/}/${{ matrix.firmware }} \
            --output-document /tmp/tftp/${{ matrix.device }}/${{ matrix.firmware }}

      - name: Set environment variables
        run: |
          echo "LG_IMAGE=/tmp/tftp/${{ matrix.device }}/${{ matrix.firmware }}" >> $GITHUB_ENV
          echo "LG_PROXY=${{ matrix.proxy }}" >> $GITHUB_ENV

      - name: Wait for free device
        run: |
          eval $(uv run labgrid-client reserve --wait --shell device=${{ matrix.device }})
          echo "LG_TOKEN=$LG_TOKEN" >> $GITHUB_ENV
          echo "LG_PLACE=+" >> $GITHUB_ENV
          uv run labgrid-client -p +$LG_TOKEN lock
          echo "LG_ENV=targets/${{ matrix.device }}.yaml" >> $GITHUB_ENV

      - name: Run test
        run: |
          uv run pytest tests/ \
            --lg-log \
            --lg-colored-steps \
            --log-cli-level=CONSOLE \
            --alluredir allure-results

      - name: Poweroff and unlock device
        if: always()
        run: |
          uv run labgrid-client power off
          uv run labgrid-client unlock

      - name: Upload console logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: console-${{ matrix.target }}
          path: console_*

      - name: Upload allure results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-${{ matrix.target }}
          path: allure-results

  test-qemu:
    name: Run test on QEMU
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: malta-be
            firmware: openwrt-malta-be-vmlinux-initramfs.elf
            dependency: qemu-system-mips

          - target: x86-64
            firmware: openwrt-x86-64-generic-squashfs-combined.img.gz
            dependency: qemu-system-x86

          - target: armsr-armv8
            firmware: openwrt-armsr-armv8-generic-initramfs-kernel.bin
            dependency: qemu-system-aarch64

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            ${{ matrix.dependency }}

          echo "LG_ENV=targets/qemu-${{ matrix.target }}.yaml" >> $GITHUB_ENV

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Download test firmware
        env:
          target: ${{ matrix.target }}
        run: |
          wget https://downloads.openwrt.org/snapshots/targets/${target/-/\/}/${{ matrix.firmware }} \
            --output-document ${{ matrix.firmware }}

      - name: Run test
        run: |
          gunzip ${{ matrix.firmware }} || true
          firmware=${{ matrix.firmware }}

          uv run pytest tests/ \
            --lg-log \
            --lg-colored-steps \
            --log-cli-level=CONSOLE \
            --alluredir allure-results \
            --firmware $GITHUB_WORKSPACE/${firmware/.gz/}

      - name: Upload console logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: console-${{ matrix.target }}
          path: console_*

      - name: Upload allure results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-${{ matrix.target }}
          path: allure-results

  allure:
    name: Deploy Allure Report
    runs-on: ubuntu-latest
    if: always()
    needs:
      - test-real
      - test-qemu
    steps:
      - name: Download all Allure results
        uses: actions/download-artifact@v4
        with:
          path: allure-results

      - name: Copy all results in the same folder
        continue-on-error: true
        run: cp -fv allure-results/allure-results-*/* allure-results/

      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: allure-results

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
